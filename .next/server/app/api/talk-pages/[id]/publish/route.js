"use strict";(()=>{var e={};e.id=197,e.ids=[197],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6984:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>c});var a={};r.r(a),r.d(a,{PATCH:()=>n});var s=r(9303),i=r(8716),o=r(670),p=r(7070),u=r(9487);async function n(e,{params:t}){try{let r=e.cookies.get("userId")?.value;if(!r)return p.NextResponse.json({error:"Unauthorized"},{status:401});let{published:a}=await e.json();if(!await u._.talkPage.findFirst({where:{id:t.id,userId:r}}))return p.NextResponse.json({error:"Talk page not found"},{status:404});let s=await u._.talkPage.update({where:{id:t.id},data:{published:a}});return p.NextResponse.json({success:!0,published:s.published})}catch(e){return console.error("Error updating publish status:",e),p.NextResponse.json({error:"Failed to update publish status"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/talk-pages/[id]/publish/route",pathname:"/api/talk-pages/[id]/publish",filename:"route",bundlePath:"app/api/talk-pages/[id]/publish/route"},resolvedPagePath:"/Users/noahcheyer/MicDrop/app/api/talk-pages/[id]/publish/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:h}=l,g="/api/talk-pages/[id]/publish/route";function x(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:c})}},9487:(e,t,r)=>{r.d(t,{_:()=>s});var a=r(3524);r(2237);let s=global.prisma||new a.PrismaClient({log:["error"]})}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,972,237],()=>r(6984));module.exports=a})();