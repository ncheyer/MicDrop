"use strict";(()=>{var e={};e.id=256,e.ids=[256],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5391:(e,a,t)=>{t.r(a),t.d(a,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>d,staticGenerationAsyncStorage:()=>m});var r={};t.r(r),t.d(r,{POST:()=>u});var i=t(9303),n=t(8716),s=t(670),o=t(7070),p=t(2331);async function u(e){try{let a=await e.json(),t=e.headers.get("x-forwarded-for"),r=e.headers.get("x-real-ip"),i=t?.split(",")[0]||r||"unknown";return await p._.emailCaptureConsent.create({data:{email:a.email,name:a.name||null,marketingConsent:a.marketingConsent,analyticsConsent:a.analyticsConsent,source:a.source,ipAddress:i,timestamp:new Date(a.timestamp)}}),a.talkPageId&&await p._.emailCapture.create({data:{talkPageId:a.talkPageId,email:a.email,name:a.name||"",tier:a.tier||"newsletter"}}),o.NextResponse.json({success:!0})}catch(e){return console.error("Error storing email capture with consent:",e),o.NextResponse.json({error:"Failed to store email capture"},{status:500})}}let l=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/privacy/email-capture/route",pathname:"/api/privacy/email-capture",filename:"route",bundlePath:"app/api/privacy/email-capture/route"},resolvedPagePath:"/Users/noahcheyer/MicDrop/app/api/privacy/email-capture/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:d}=l,g="/api/privacy/email-capture/route";function h(){return(0,s.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:m})}},2331:(e,a,t)=>{t.d(a,{_:()=>i});var r=t(3524);let i=globalThis.prisma||new r.PrismaClient}};var a=require("../../../../webpack-runtime.js");a.C(e);var t=e=>a(a.s=e),r=a.X(0,[948,972],()=>t(5391));module.exports=r})();