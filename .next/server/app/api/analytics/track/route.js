"use strict";(()=>{var e={};e.id=452,e.ids=[452],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9755:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>m,patchFetch:()=>w,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>y,staticGenerationAsyncStorage:()=>k});var r={};a.r(r),a.d(r,{GET:()=>u,POST:()=>l});var n=a(9303),i=a(8716),s=a(670),o=a(7070),c=a(9487);async function l(e){try{let{event:t,talkPageId:a,data:r}=await e.json();if(await c._.analytics.create({data:{event:t,talkPageId:a,data:r||{}}}),"link_click"===t&&r?.linkType==="gpt"){let e=r.linkName;await c._.customGPT.updateMany({where:{talkPageId:a,name:e},data:{clickCount:{increment:1}}})}else if("link_click"===t&&r?.linkType==="business"){let e=r.linkName;await c._.businessLink.updateMany({where:{talkPageId:a,name:e},data:{clickCount:{increment:1}}})}else if("link_click"===t&&r?.linkType==="resource"){let e=r.linkName;await c._.download.updateMany({where:{talkPageId:a,title:e},data:{downloadCount:{increment:1}}})}else if("email_capture"===t)try{await c._.emailCapture.create({data:{email:r.email,tier:r.captureType,talkPageId:a}})}catch(e){console.log("Email already captured for this talk page")}return o.NextResponse.json({success:!0})}catch(e){return console.error("Error tracking analytics:",e),o.NextResponse.json({error:"Failed to track analytics"},{status:500})}}async function u(e){try{let{searchParams:t}=new URL(e.url),a=t.get("talkPageId"),r=e.cookies.get("userId")?.value;if(!r)return o.NextResponse.json({error:"Unauthorized"},{status:401});if(!a)return o.NextResponse.json({error:"Talk page ID required"},{status:400});if(!await c._.talkPage.findFirst({where:{id:a,userId:r}}))return o.NextResponse.json({error:"Talk page not found"},{status:404});let[n,i,s,l,u,d]=await Promise.all([c._.analytics.count({where:{talkPageId:a,event:"page_view"}}),c._.analytics.count({where:{talkPageId:a,event:"link_click"}}),c._.emailCapture.count({where:{talkPageId:a}}),c._.customGPT.findMany({where:{talkPageId:a},select:{name:!0,clickCount:!0},orderBy:{clickCount:"desc"}}),c._.businessLink.findMany({where:{talkPageId:a},select:{name:!0,clickCount:!0},orderBy:{clickCount:"desc"}}),c._.download.findMany({where:{talkPageId:a},select:{title:!0,downloadCount:!0},orderBy:{downloadCount:"desc"}})]),p=await c._.analytics.findMany({where:{talkPageId:a},orderBy:{createdAt:"desc"},take:50});return o.NextResponse.json({overview:{pageViews:n,linkClicks:i,emailCaptures:s,conversionRate:n>0?(s/n*100).toFixed(2):0},gpts:l,businessLinks:u,downloads:d,recentActivity:p})}catch(e){return console.error("Error fetching analytics:",e),o.NextResponse.json({error:"Failed to fetch analytics"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/analytics/track/route",pathname:"/api/analytics/track",filename:"route",bundlePath:"app/api/analytics/track/route"},resolvedPagePath:"/Users/noahcheyer/MicDrop/app/api/analytics/track/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:k,serverHooks:y}=d,m="/api/analytics/track/route";function w(){return(0,s.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:k})}},9487:(e,t,a)=>{a.d(t,{_:()=>n});var r=a(3524);a(2237);let n=global.prisma||new r.PrismaClient({log:["error"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[948,972,237],()=>a(9755));module.exports=r})();